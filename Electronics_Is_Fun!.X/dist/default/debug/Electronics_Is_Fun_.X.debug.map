Microchip MPLAB XC8 Compiler V1.44 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.44\dat\en_msgs.txt -cs \
  -h+dist/default/debug\Electronics_Is_Fun_.X.debug.sym \
  --cmf=dist/default/debug\Electronics_Is_Fun_.X.debug.cmf -z -Q16F84A \
  -oC:\Users\Home\AppData\Local\Temp\s554.2 \
  -Mdist/default/debug/Electronics_Is_Fun_.X.debug.map -E1 -ver=XC8 \
  -ASTACK=01Dh-04dh -pstack=STACK -ACODE=00h-03FFh -ASTRCODE=00h-03FFh \
  -ASTRING=00h-0FFhx4 -ACONST=00h-0FFhx4 -AENTRY=00h-0FFhx4 \
  -ABANK0=0Ch-04Dh -ARAM=0Ch-04Dh -AABS1=0Ch-04Fh -ACOMMON=04Eh-04Fh \
  -ASFR0=00h-0Bh -ASFR1=080h-0CDh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -ACONFIG=02007h-02007h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-03Fh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\Home\AppData\Local\Temp\s554.obj \
  dist/default/debug\Electronics_Is_Fun_.X.debug.obj 

Object code version is 3.11

Machine type is 16F84A



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Home\AppData\Local\Temp\s554.obj
                end_init                              F        F        1        8       0
                reset_vec                             0        0        1        0       0
                config                             2007     2007        1     400E       0
dist/default/debug\Electronics_Is_Fun_.X.debug.obj
                cinit                                10       10        D        8       0
                intentry                              4        4        B        8       0
                text4                                1D       1D       9B        8       0
                text3                                B8       B8       17        8       0
                text2                                CF       CF       14        8       0
                text1                                E3       E3        8        8       0
                maintext                             EB       EB        6        8       0
                cstackBANK0                          16       16        7        C       1
                bssBANK0                              C        C        A        C       1

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              F        F        1         0
                cinit                                10       10        D         0
                intentry                              4        4        B         0
                reset_vec                             0        0        1         0
                text4                                1D       1D       9B         0
                text3                                B8       B8       17         0
                text2                                CF       CF       14         0
                text1                                E3       E3        8         0
                maintext                             EB       EB        6         0

        CLASS   STRCODE        

        CLASS   STRING         

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   BANK0          
                cstackBANK0                          16       16        7         1
                bssBANK0                              C        C        A         1

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               4E       4E        2         1

        CLASS   COMMON         

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   CONFIG         
                config                             2007     2007        1         0

        CLASS   IDLOC          

        CLASS   EEDATA         

        CLASS   BANK1          



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000001  000001         0       0  CODE        2
                intentry                       000004  0000ED  0000F1         8       0  CODE        2
                bssBANK0                       00000C  000011  00001D         C       1  BANK0       1
                config                         002007  000001  002008      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            001D-004D             31           1
        CODE             0001-0003              3           2
                         00F1-03FF            30F
        CONST            0001-0003              3           2
                         00F1-03FF            100
        EEDATA           2100-213F             40           2
        ENTRY            0001-0003              3           2
                         00F1-03FF            100
        IDLOC            2000-2003              4           2
        RAM              001D-004D             31           1
        SFR0             0000-000B              C           1
        SFR1             0080-00CD             4E           1
        STACK            001D-004D             31           1
        STRCODE          0001-0003              3           2
                         00F1-03FF            30F
        STRING           0001-0003              3           2
                         00F1-03FF            100

                                  Symbol Table

_INTCON                  (abs)        000B
_INTE                    (abs)        005C
_INTF                    (abs)        0059
_OPTION_REG              (abs)        0081
_PORTA                   (abs)        0005
_PORTB                   (abs)        0006
_RB0                     (abs)        0030
_T0IE                    (abs)        005D
_T0IF                    (abs)        005A
_TMR0                    (abs)        0001
_TRISA                   (abs)        0085
_TRISB                   (abs)        0086
__CFG_CP$ON              (abs)        0000
__CFG_FOSC$XT            (abs)        0000
__CFG_WDTE$OFF           (abs)        0000
__Habs1                  abs1         0000
__Hbank0                 bank0        0000
__Hbank1                 bank1        0000
__HbssBANK0              bssBANK0     0000
__Hcinit                 cinit        001D
__Hclrtext               clrtext      0000
__Hcode                  code         0000
__Hcommon                common       0000
__Hconfig                config       2008
__HcstackBANK0           cstackBANK0  0000
__HcstackCOMMON          cstackCOMMON 0000
__Heeprom_data           eeprom_data  0000
__Hend_init              end_init     0010
__Hfunctab               functab      0000
__Hidloc                 idloc        0000
__Hinit                  init         000F
__Hintentry              intentry     000F
__Hmaintext              maintext     0000
__Hpowerup               powerup      0000
__Hram                   ram          0000
__Hreset_vec             reset_vec    0001
__Hsfr0                  sfr0         0000
__Hsfr1                  sfr1         0000
__Hspace_0               (abs)        2008
__Hspace_1               (abs)        001D
__Hspace_2               (abs)        0000
__Hspace_3               (abs)        0000
__Hstack                 stack        0000
__Hstrings               strings      0000
__Htext                  text         0000
__Labs1                  abs1         0000
__Lbank0                 bank0        0000
__Lbank1                 bank1        0000
__LbssBANK0              bssBANK0     0000
__Lcinit                 cinit        0010
__Lclrtext               clrtext      0000
__Lcode                  code         0000
__Lcommon                common       0000
__Lconfig                config       2007
__LcstackBANK0           cstackBANK0  0000
__LcstackCOMMON          cstackCOMMON 0000
__Leeprom_data           eeprom_data  0000
__Lend_init              end_init     000F
__Lfunctab               functab      0000
__Lidloc                 idloc        0000
__Linit                  init         000F
__Lintentry              intentry     0004
__Lmaintext              maintext     0000
__Lpowerup               powerup      0000
__Lram                   ram          0000
__Lreset_vec             reset_vec    0000
__Lsfr0                  sfr0         0000
__Lsfr1                  sfr1         0000
__Lspace_0               (abs)        0000
__Lspace_1               (abs)        0000
__Lspace_2               (abs)        0000
__Lspace_3               (abs)        0000
__Lstack                 stack        0000
__Lstrings               strings      0000
__Ltext                  text         0000
__S0                     (abs)        2008
__S1                     (abs)        001D
__S2                     (abs)        0000
__S3                     (abs)        0000
___int_sp                stack        0000
___latbits               (abs)        0000
___sp                    stack        0000
__end_of__initialization cinit        001B
__end_of_extInterrupt    text4        00B8
__end_of_init            text3        00CF
__end_of_main            maintext     00F1
__end_of_minMark         text2        00E3
__end_of_resetTime       text1        00EB
__initialization         cinit        0010
__pbssBANK0              bssBANK0     000C
__pcstackBANK0           cstackBANK0  0016
__pcstackCOMMON          cstackCOMMON 0000
__pintentry              intentry     0004
__pmaintext              maintext     00EB
__ptext1                 text1        00E3
__ptext2                 text2        00CF
__ptext3                 text3        00B8
__ptext4                 text4        001D
__size_of_extInterrupt   (abs)        0000
__size_of_init           (abs)        0000
__size_of_main           (abs)        0000
__size_of_minMark        (abs)        0000
__size_of_resetTime      (abs)        0000
_extInterrupt            text4        001D
_hour                    bssBANK0     0012
_init                    text3        00B8
_main                    maintext     00EB
_min                     bssBANK0     0014
_minMark                 text2        00CF
_resetTime               text1        00E3
_secNo                   bssBANK0     0010
_synced                  bssBANK0     000C
_timerCount              bssBANK0     000E
btemp                    (abs)        004E
end_of_initialization    cinit        001B
interrupt_function       intentry     0004
intlevel0                functab      0000
intlevel1                functab      0000
intlevel2                functab      0000
intlevel3                functab      0000
intlevel4                functab      0000
intlevel5                functab      0000
reset_vec                reset_vec    0000
saved_w                  (abs)        004E
stackhi                  (abs)        0000
stacklo                  (abs)        0000
start                    init         000F
start_initialization     cinit        0010
wtemp0                   (abs)        004E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 12 in file "Main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2   22[None  ] int 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         0       0
      Temps:          0       0
      Totals:         0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    2
 This function calls:
		_init
		_minMark
		_resetTime
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _resetTime *****************
 Defined at:
		line 62 in file "Functions.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         0       0
      Temps:          0       0
      Totals:         0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _minMark *****************
 Defined at:
		line 69 in file "Functions.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         0       0
      Temps:          0       0
      Totals:         0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _init *****************
 Defined at:
		line 3 in file "Functions.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         0       0
      Temps:          0       0
      Totals:         0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _extInterrupt *****************
 Defined at:
		line 24 in file "Functions.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         0       0
      Temps:          0       7
      Totals:         0       7
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
Functions.c
		_init          		CODE           	00B8	0000	24
		_resetTime     		CODE           	00E3	0000	9
		_minMark       		CODE           	00CF	0000	21
		_extInterrupt  		CODE           	001D	0000	156

Functions.c estimated size: 210

Main.c
		_main          		CODE           	00EB	0000	7

Main.c estimated size: 7

shared
		__initialization		CODE           	0010	0000	12

shared estimated size: 12

