

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sun Apr 01 12:08:07 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F84A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	dabs	1,0x4E,2
    15  0000                     
    16                           ; Version 1.44
    17                           ; Generated 14/09/2017 GMT
    18                           ; 
    19                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F84A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  0081                     	;# 
    62  0085                     	;# 
    63  0086                     	;# 
    64  0088                     	;# 
    65  0089                     	;# 
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  0081                     	;# 
    78  0085                     	;# 
    79  0086                     	;# 
    80  0088                     	;# 
    81  0089                     	;# 
    82  0006                     _PORTB	set	6
    83  0005                     _PORTA	set	5
    84  0001                     _TMR0	set	1
    85  000B                     _INTCON	set	11
    86  005A                     _T0IF	set	90
    87  005D                     _T0IE	set	93
    88  0059                     _INTF	set	89
    89  005C                     _INTE	set	92
    90  0030                     _RB0	set	48
    91  0085                     _TRISA	set	133
    92  0086                     _TRISB	set	134
    93  0081                     _OPTION_REG	set	129
    94                           
    95                           ; #config settings
    96  0000                     
    97                           	psect	cinit
    98  0010                     start_initialization:	
    99  0010                     __initialization:	
   100                           
   101                           ; Clear objects allocated to BANK0
   102  0010  1283               	bcf	3,5	;RP0=0, select bank0
   103  0011  018C               	clrf	__pbssBANK0& (0+127)
   104  0012  018D               	clrf	(__pbssBANK0+1)& (0+127)
   105  0013  018E               	clrf	(__pbssBANK0+2)& (0+127)
   106  0014  018F               	clrf	(__pbssBANK0+3)& (0+127)
   107  0015  0190               	clrf	(__pbssBANK0+4)& (0+127)
   108  0016  0191               	clrf	(__pbssBANK0+5)& (0+127)
   109  0017  0192               	clrf	(__pbssBANK0+6)& (0+127)
   110  0018  0193               	clrf	(__pbssBANK0+7)& (0+127)
   111  0019  0194               	clrf	(__pbssBANK0+8)& (0+127)
   112  001A  0195               	clrf	(__pbssBANK0+9)& (0+127)
   113  001B                     end_of_initialization:	
   114                           ;End of C runtime variable initialization code
   115                           
   116  001B                     __end_of__initialization:	
   117  001B  0183               	clrf	3
   118  001C  28EB               	ljmp	_main	;jump to C main() function
   119                           
   120                           	psect	bssBANK0
   121  000C                     __pbssBANK0:	
   122  000C                     _synced:	
   123  000C                     	ds	2
   124  000E                     _timerCount:	
   125  000E                     	ds	2
   126  0010                     _secNo:	
   127  0010                     	ds	2
   128  0012                     _hour:	
   129  0012                     	ds	2
   130  0014                     _min:	
   131  0014                     	ds	2
   132                           
   133                           	psect	cstackCOMMON
   134  0000                     __pcstackCOMMON:	
   135  0000                     ??_init:	
   136  0000                     ??_resetTime:	
   137                           ; 1 bytes @ 0x0
   138                           
   139  0000                     ??_minMark:	
   140                           ; 1 bytes @ 0x0
   141                           
   142  0000                     ??_main:	
   143                           ; 1 bytes @ 0x0
   144                           
   145                           
   146                           	psect	cstackBANK0
   147  0016                     __pcstackBANK0:	
   148                           ; 1 bytes @ 0x0
   149                           
   150  0016                     ?_init:	
   151  0016                     ?_resetTime:	
   152                           ; 1 bytes @ 0x0
   153                           
   154  0016                     ?_minMark:	
   155                           ; 1 bytes @ 0x0
   156                           
   157  0016                     ?_extInterrupt:	
   158                           ; 1 bytes @ 0x0
   159                           
   160  0016                     ??_extInterrupt:	
   161                           ; 1 bytes @ 0x0
   162                           
   163  0016                     ?_main:	
   164                           ; 1 bytes @ 0x0
   165                           
   166                           
   167                           ; 2 bytes @ 0x0
   168  0016                     	ds	7
   169                           
   170                           	psect	maintext
   171  00EB                     __pmaintext:	
   172 ;;
   173 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   174 ;;
   175 ;; *************** function _main *****************
   176 ;; Defined at:
   177 ;;		line 12 in file "Main.c"
   178 ;; Parameters:    Size  Location     Type
   179 ;;		None
   180 ;; Auto vars:     Size  Location     Type
   181 ;;		None
   182 ;; Return value:  Size  Location     Type
   183 ;;                  2   22[None  ] int 
   184 ;; Registers used:
   185 ;;		wreg, status,2, status,0, pclath, cstack
   186 ;; Tracked objects:
   187 ;;		On entry : B00/0
   188 ;;		On exit  : 0/0
   189 ;;		Unchanged: 0/0
   190 ;; Data sizes:     COMMON   BANK0
   191 ;;      Params:         0       0
   192 ;;      Locals:         0       0
   193 ;;      Temps:          0       0
   194 ;;      Totals:         0       0
   195 ;;Total ram usage:        0 bytes
   196 ;; Hardware stack levels required when called:    2
   197 ;; This function calls:
   198 ;;		_init
   199 ;;		_minMark
   200 ;;		_resetTime
   201 ;; This function is called by:
   202 ;;		Startup code after reset
   203 ;; This function uses a non-reentrant model
   204 ;;
   205                           
   206                           
   207                           ;psect for function _main
   208  00EB                     _main:	
   209                           
   210                           ;Main.c: 14: init();
   211                           
   212                           ;incstack = 0
   213                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   214  00EB  20B8               	fcall	_init
   215                           
   216                           ;Main.c: 15: resetTime();
   217  00EC  20E3               	fcall	_resetTime
   218                           
   219                           ;Main.c: 16: minMark();
   220  00ED  20CF               	fcall	_minMark
   221  00EE                     l665:	
   222                           ;Main.c: 18: while(1){
   223                           
   224                           
   225                           ;Main.c: 20: INTCON = 0b10010000;
   226  00EE  3090               	movlw	144
   227  00EF  008B               	movwf	11	;volatile
   228  00F0  28EE               	goto	l665
   229  00F1                     __end_of_main:	
   230                           ;Main.c: 22: }
   231                           ;Main.c: 26: return;
   232                           
   233                           
   234                           	psect	text1
   235  00E3                     __ptext1:	
   236 ;; *************** function _resetTime *****************
   237 ;; Defined at:
   238 ;;		line 62 in file "Functions.c"
   239 ;; Parameters:    Size  Location     Type
   240 ;;		None
   241 ;; Auto vars:     Size  Location     Type
   242 ;;		None
   243 ;; Return value:  Size  Location     Type
   244 ;;                  1    wreg      void 
   245 ;; Registers used:
   246 ;;		status,2
   247 ;; Tracked objects:
   248 ;;		On entry : 0/0
   249 ;;		On exit  : 0/0
   250 ;;		Unchanged: 0/0
   251 ;; Data sizes:     COMMON   BANK0
   252 ;;      Params:         0       0
   253 ;;      Locals:         0       0
   254 ;;      Temps:          0       0
   255 ;;      Totals:         0       0
   256 ;;Total ram usage:        0 bytes
   257 ;; Hardware stack levels used:    1
   258 ;; Hardware stack levels required when called:    1
   259 ;; This function calls:
   260 ;;		Nothing
   261 ;; This function is called by:
   262 ;;		_main
   263 ;; This function uses a non-reentrant model
   264 ;;
   265                           
   266                           
   267                           ;psect for function _resetTime
   268  00E3                     _resetTime:	
   269                           
   270                           ;Functions.c: 64: min = 0x00;
   271                           
   272                           ;incstack = 0
   273                           ; Regs used in _resetTime: [status,2]
   274  00E3  1283               	bcf	3,5	;RP0=0, select bank0
   275  00E4  0194               	clrf	_min
   276  00E5  0195               	clrf	_min+1
   277                           
   278                           ;Functions.c: 65: hour = 0x00;
   279  00E6  0192               	clrf	_hour
   280  00E7  0193               	clrf	_hour+1
   281                           
   282                           ;Functions.c: 66: secNo = 0;
   283  00E8  0190               	clrf	_secNo
   284  00E9  0191               	clrf	_secNo+1
   285  00EA  0008               	return
   286  00EB                     __end_of_resetTime:	
   287                           
   288                           	psect	text2
   289  00CF                     __ptext2:	
   290 ;; *************** function _minMark *****************
   291 ;; Defined at:
   292 ;;		line 69 in file "Functions.c"
   293 ;; Parameters:    Size  Location     Type
   294 ;;		None
   295 ;; Auto vars:     Size  Location     Type
   296 ;;		None
   297 ;; Return value:  Size  Location     Type
   298 ;;                  1    wreg      void 
   299 ;; Registers used:
   300 ;;		wreg, status,2, status,0
   301 ;; Tracked objects:
   302 ;;		On entry : 0/0
   303 ;;		On exit  : 0/0
   304 ;;		Unchanged: 0/0
   305 ;; Data sizes:     COMMON   BANK0
   306 ;;      Params:         0       0
   307 ;;      Locals:         0       0
   308 ;;      Temps:          0       0
   309 ;;      Totals:         0       0
   310 ;;Total ram usage:        0 bytes
   311 ;; Hardware stack levels used:    1
   312 ;; Hardware stack levels required when called:    1
   313 ;; This function calls:
   314 ;;		Nothing
   315 ;; This function is called by:
   316 ;;		_main
   317 ;; This function uses a non-reentrant model
   318 ;;
   319                           
   320                           
   321                           ;psect for function _minMark
   322  00CF                     _minMark:	
   323                           
   324                           ;Functions.c: 71: synced = 0;
   325                           
   326                           ;incstack = 0
   327                           ; Regs used in _minMark: [wreg+status,2+status,0]
   328  00CF  1283               	bcf	3,5	;RP0=0, select bank0
   329  00D0  018C               	clrf	_synced
   330  00D1  018D               	clrf	_synced+1
   331  00D2                     l647:	
   332                           ;Functions.c: 72: do{
   333                           
   334                           
   335                           ;Functions.c: 74: if(RB0 == 0){
   336  00D2  1806               	btfsc	6,0	;volatile
   337  00D3  28D6               	goto	l651
   338                           
   339                           ;Functions.c: 75: INTCON |= 0b00100000;
   340  00D4  168B               	bsf	11,5	;volatile
   341                           
   342                           ;Functions.c: 76: }
   343  00D5  28DC               	goto	l655
   344  00D6                     l651:	
   345                           
   346                           ;Functions.c: 77: else{
   347                           ;Functions.c: 78: INTCON = 0b10010000;
   348  00D6  3090               	movlw	144
   349  00D7  008B               	movwf	11	;volatile
   350                           
   351                           ;Functions.c: 79: TMR0 = 230;
   352  00D8  30E6               	movlw	230
   353  00D9  0081               	movwf	1	;volatile
   354                           
   355                           ;Functions.c: 80: timerCount = 0;
   356  00DA  018E               	clrf	_timerCount
   357  00DB  018F               	clrf	_timerCount+1
   358  00DC                     l655:	
   359                           
   360                           ;Functions.c: 81: }
   361                           ;Functions.c: 83: }while (!(RB0 == 0 && synced == 1));
   362  00DC  1806               	btfsc	6,0	;volatile
   363  00DD  28D2               	goto	l647
   364  00DE  030C               	decf	_synced,w
   365  00DF  040D               	iorwf	_synced+1,w
   366  00E0  1903               	btfsc	3,2
   367  00E1  0008               	return
   368  00E2  28D2               	goto	l647
   369  00E3                     __end_of_minMark:	
   370                           
   371                           	psect	text3
   372  00B8                     __ptext3:	
   373 ;; *************** function _init *****************
   374 ;; Defined at:
   375 ;;		line 3 in file "Functions.c"
   376 ;; Parameters:    Size  Location     Type
   377 ;;		None
   378 ;; Auto vars:     Size  Location     Type
   379 ;;		None
   380 ;; Return value:  Size  Location     Type
   381 ;;                  1    wreg      void 
   382 ;; Registers used:
   383 ;;		wreg, status,2
   384 ;; Tracked objects:
   385 ;;		On entry : 0/0
   386 ;;		On exit  : 0/0
   387 ;;		Unchanged: 0/0
   388 ;; Data sizes:     COMMON   BANK0
   389 ;;      Params:         0       0
   390 ;;      Locals:         0       0
   391 ;;      Temps:          0       0
   392 ;;      Totals:         0       0
   393 ;;Total ram usage:        0 bytes
   394 ;; Hardware stack levels used:    1
   395 ;; Hardware stack levels required when called:    1
   396 ;; This function calls:
   397 ;;		Nothing
   398 ;; This function is called by:
   399 ;;		_main
   400 ;; This function uses a non-reentrant model
   401 ;;
   402                           
   403                           
   404                           ;psect for function _init
   405  00B8                     _init:	
   406                           
   407                           ;Functions.c: 5: OPTION_REG = 0b00000111;
   408                           
   409                           ;incstack = 0
   410                           ; Regs used in _init: [wreg+status,2]
   411  00B8  3007               	movlw	7
   412  00B9  1683               	bsf	3,5	;RP0=1, select bank1
   413  00BA  0081               	movwf	1	;volatile
   414                           
   415                           ;Functions.c: 7: INTCON = 0b10000000;
   416  00BB  3080               	movlw	128
   417  00BC  008B               	movwf	11	;volatile
   418                           
   419                           ;Functions.c: 9: TMR0 = 230;
   420  00BD  30E6               	movlw	230
   421  00BE  1283               	bcf	3,5	;RP0=0, select bank0
   422  00BF  0081               	movwf	1	;volatile
   423                           
   424                           ;Functions.c: 11: TRISB = 0b00000001;
   425  00C0  3001               	movlw	1
   426  00C1  1683               	bsf	3,5	;RP0=1, select bank1
   427  00C2  0086               	movwf	6	;volatile
   428                           
   429                           ;Functions.c: 12: TRISA = 0x00;
   430  00C3  0185               	clrf	5	;volatile
   431                           
   432                           ;Functions.c: 14: PORTA = 0x00;
   433  00C4  1283               	bcf	3,5	;RP0=0, select bank0
   434  00C5  0185               	clrf	5	;volatile
   435                           
   436                           ;Functions.c: 15: PORTB = 0x00;
   437  00C6  0186               	clrf	6	;volatile
   438                           
   439                           ;Functions.c: 17: min = 0x00;
   440  00C7  0194               	clrf	_min
   441  00C8  0195               	clrf	_min+1
   442                           
   443                           ;Functions.c: 18: hour = 0x00;
   444  00C9  0192               	clrf	_hour
   445  00CA  0193               	clrf	_hour+1
   446                           
   447                           ;Functions.c: 20: synced = 0;
   448  00CB  018C               	clrf	_synced
   449  00CC  018D               	clrf	_synced+1
   450                           
   451                           ;Functions.c: 21: RB0 = 1;
   452  00CD  1406               	bsf	6,0	;volatile
   453  00CE  0008               	return
   454  00CF                     __end_of_init:	
   455                           
   456                           	psect	text4
   457  001D                     __ptext4:	
   458 ;; *************** function _extInterrupt *****************
   459 ;; Defined at:
   460 ;;		line 24 in file "Functions.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;		None
   463 ;; Auto vars:     Size  Location     Type
   464 ;;		None
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      void 
   467 ;; Registers used:
   468 ;;		wreg, status,2, status,0, btemp+1
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMMON   BANK0
   474 ;;      Params:         0       0
   475 ;;      Locals:         0       0
   476 ;;      Temps:          0       7
   477 ;;      Totals:         0       7
   478 ;;Total ram usage:        7 bytes
   479 ;; Hardware stack levels used:    1
   480 ;; This function calls:
   481 ;;		Nothing
   482 ;; This function is called by:
   483 ;;		Interrupt level 1
   484 ;; This function uses a non-reentrant model
   485 ;;
   486                           
   487                           
   488                           ;psect for function _extInterrupt
   489  001D                     _extInterrupt:	
   490                           
   491                           ;Functions.c: 26: if (INTE && INTF){
   492  001D  1A0B               	btfsc	11,4	;volatile
   493  001E  1C8B               	btfss	11,1	;volatile
   494  001F  2897               	goto	i1l70
   495                           
   496                           ;Functions.c: 27: INTF = 0;
   497  0020  108B               	bcf	11,1	;volatile
   498                           
   499                           ;Functions.c: 29: if(synced == 1){
   500  0021  030C               	decf	_synced,w
   501  0022  040D               	iorwf	_synced+1,w
   502  0023  1D03               	btfss	3,2
   503  0024  2897               	goto	i1l70
   504                           
   505                           ;Functions.c: 30: secNo++;
   506  0025  3001               	movlw	1
   507  0026  0790               	addwf	_secNo,f
   508  0027  1803               	skipnc
   509  0028  0A91               	incf	_secNo+1,f
   510  0029  3000               	movlw	0
   511  002A  0791               	addwf	_secNo+1,f
   512                           
   513                           ;Functions.c: 31: _delay((unsigned long)((150)*(4000000/4000.0)));
   514  002B  30C3               	movlw	195
   515  002C  0097               	movwf	??_extInterrupt+1
   516  002D  30CD               	movlw	205
   517  002E  0096               	movwf	??_extInterrupt
   518  002F                     u27_27:	
   519  002F  0B96               	decfsz	??_extInterrupt,f
   520  0030  282F               	goto	u27_27
   521  0031  0B97               	decfsz	??_extInterrupt+1,f
   522  0032  282F               	goto	u27_27
   523                           
   524                           ;Functions.c: 33: if(secNo > 38 && secNo < 45)
   525  0033  1283               	bcf	3,5	;RP0=0, select bank0
   526  0034  0811               	movf	_secNo+1,w
   527  0035  3A80               	xorlw	128
   528  0036  00CF               	movwf	79
   529  0037  3080               	movlw	128
   530  0038  024F               	subwf	79,w
   531  0039  1D03               	skipz
   532  003A  283D               	goto	u20_25
   533  003B  3027               	movlw	39
   534  003C  0210               	subwf	_secNo,w
   535  003D                     u20_25:	
   536  003D  1C03               	skipc
   537  003E  285E               	goto	i1l685
   538  003F  1283               	bcf	3,5	;RP0=0, select bank0
   539  0040  0811               	movf	_secNo+1,w
   540  0041  3A80               	xorlw	128
   541  0042  00CF               	movwf	79
   542  0043  3080               	movlw	128
   543  0044  024F               	subwf	79,w
   544  0045  1D03               	skipz
   545  0046  2849               	goto	u21_25
   546  0047  302D               	movlw	45
   547  0048  0210               	subwf	_secNo,w
   548  0049                     u21_25:	
   549  0049  1803               	skipnc
   550  004A  285E               	goto	i1l685
   551                           
   552                           ;Functions.c: 34: {
   553                           ;Functions.c: 35: hour = RB0;
   554  004B  1003               	clrc
   555  004C  1283               	bcf	3,5	;RP0=0, select bank0
   556  004D  1806               	btfsc	6,0	;volatile
   557  004E  1403               	setc
   558  004F  3000               	movlw	0
   559  0050  1803               	skipnc
   560  0051  3001               	movlw	1
   561  0052  0096               	movwf	??_extInterrupt
   562  0053  0197               	clrf	??_extInterrupt+1
   563  0054  0816               	movf	??_extInterrupt,w
   564  0055  0092               	movwf	_hour
   565  0056  0817               	movf	??_extInterrupt+1,w
   566  0057  0093               	movwf	_hour+1
   567                           
   568                           ;Functions.c: 36: hour = hour << 1;
   569  0058  1003               	clrc
   570  0059  0D12               	rlf	_hour,w
   571  005A  0092               	movwf	_hour
   572  005B  0D13               	rlf	_hour+1,w
   573  005C  0093               	movwf	_hour+1
   574                           
   575                           ;Functions.c: 37: }
   576  005D  2888               	goto	i1l693
   577  005E                     i1l685:	
   578                           
   579                           ;Functions.c: 38: else if(secNo > 44 && secNo < 60)
   580  005E  1283               	bcf	3,5	;RP0=0, select bank0
   581  005F  0811               	movf	_secNo+1,w
   582  0060  3A80               	xorlw	128
   583  0061  00CF               	movwf	79
   584  0062  3080               	movlw	128
   585  0063  024F               	subwf	79,w
   586  0064  1D03               	skipz
   587  0065  2868               	goto	u22_25
   588  0066  302D               	movlw	45
   589  0067  0210               	subwf	_secNo,w
   590  0068                     u22_25:	
   591  0068  1C03               	skipc
   592  0069  2888               	goto	i1l693
   593  006A  1283               	bcf	3,5	;RP0=0, select bank0
   594  006B  0811               	movf	_secNo+1,w
   595  006C  3A80               	xorlw	128
   596  006D  00CF               	movwf	79
   597  006E  3080               	movlw	128
   598  006F  024F               	subwf	79,w
   599  0070  1D03               	skipz
   600  0071  2874               	goto	u23_25
   601  0072  303C               	movlw	60
   602  0073  0210               	subwf	_secNo,w
   603  0074                     u23_25:	
   604  0074  1803               	skipnc
   605  0075  2888               	goto	i1l693
   606                           
   607                           ;Functions.c: 39: {
   608                           ;Functions.c: 40: min = RB0;
   609  0076  1003               	clrc
   610  0077  1283               	bcf	3,5	;RP0=0, select bank0
   611  0078  1806               	btfsc	6,0	;volatile
   612  0079  1403               	setc
   613  007A  3000               	movlw	0
   614  007B  1803               	skipnc
   615  007C  3001               	movlw	1
   616  007D  0096               	movwf	??_extInterrupt
   617  007E  0197               	clrf	??_extInterrupt+1
   618  007F  0816               	movf	??_extInterrupt,w
   619  0080  0094               	movwf	_min
   620  0081  0817               	movf	??_extInterrupt+1,w
   621  0082  0095               	movwf	_min+1
   622                           
   623                           ;Functions.c: 41: min = min << 1;
   624  0083  1003               	clrc
   625  0084  0D14               	rlf	_min,w
   626  0085  0094               	movwf	_min
   627  0086  0D15               	rlf	_min+1,w
   628  0087  0095               	movwf	_min+1
   629  0088                     i1l693:	
   630                           
   631                           ;Functions.c: 42: }
   632                           ;Functions.c: 43: _delay((unsigned long)((200)*(4000000/4000.0)));
   633  0088  3002               	movlw	2
   634  0089  1283               	bcf	3,5	;RP0=0, select bank0
   635  008A  0098               	movwf	??_extInterrupt+2
   636  008B  3004               	movlw	4
   637  008C  0097               	movwf	??_extInterrupt+1
   638  008D  30BA               	movlw	186
   639  008E  0096               	movwf	??_extInterrupt
   640  008F                     u28_27:	
   641  008F  0B96               	decfsz	??_extInterrupt,f
   642  0090  288F               	goto	u28_27
   643  0091  0B97               	decfsz	??_extInterrupt+1,f
   644  0092  288F               	goto	u28_27
   645  0093  0B98               	decfsz	??_extInterrupt+2,f
   646  0094  288F               	goto	u28_27
   647  0095  0000               	nop
   648                           
   649                           ;Functions.c: 44: return;
   650  0096  28AC               	goto	i1l75
   651  0097                     i1l70:	
   652                           
   653                           ;Functions.c: 45: }
   654                           ;Functions.c: 47: }
   655                           ;Functions.c: 48: if (T0IE && T0IF){
   656  0097  1A8B               	btfsc	11,5	;volatile
   657  0098  1D0B               	btfss	11,2	;volatile
   658  0099  28AC               	goto	i1l75
   659                           
   660                           ;Functions.c: 49: timerCount++;
   661  009A  3001               	movlw	1
   662  009B  1283               	bcf	3,5	;RP0=0, select bank0
   663  009C  078E               	addwf	_timerCount,f
   664  009D  1803               	skipnc
   665  009E  0A8F               	incf	_timerCount+1,f
   666  009F  3000               	movlw	0
   667  00A0  078F               	addwf	_timerCount+1,f
   668                           
   669                           ;Functions.c: 51: if (timerCount == 7)
   670  00A1  3007               	movlw	7
   671  00A2  060E               	xorwf	_timerCount,w
   672  00A3  040F               	iorwf	_timerCount+1,w
   673  00A4  1D03               	btfss	3,2
   674  00A5  28AC               	goto	i1l75
   675                           
   676                           ;Functions.c: 52: {
   677                           ;Functions.c: 53: timerCount = 0;
   678  00A6  018E               	clrf	_timerCount
   679  00A7  018F               	clrf	_timerCount+1
   680                           
   681                           ;Functions.c: 55: synced = 1;
   682  00A8  3001               	movlw	1
   683  00A9  008C               	movwf	_synced
   684  00AA  3000               	movlw	0
   685  00AB  008D               	movwf	_synced+1
   686  00AC                     i1l75:	
   687  00AC  1283               	bcf	3,5	;RP0=0, select bank0
   688  00AD  081C               	movf	??_extInterrupt+6,w
   689  00AE  00CF               	movwf	79
   690  00AF  081B               	movf	??_extInterrupt+5,w
   691  00B0  008A               	movwf	10
   692  00B1  081A               	movf	??_extInterrupt+4,w
   693  00B2  0084               	movwf	4
   694  00B3  0E19               	swapf	(??_extInterrupt+3)^0,w
   695  00B4  0083               	movwf	3
   696  00B5  0ECE               	swapf	78,f
   697  00B6  0E4E               	swapf	78,w
   698  00B7  0009               	retfie
   699  00B8                     __end_of_extInterrupt:	
   700  004E                     btemp	set	78	;btemp
   701  004E                     wtemp0	set	78
   702                           
   703                           	psect	intentry
   704  0004                     __pintentry:	
   705                           ;incstack = 0
   706                           ; Regs used in _extInterrupt: [wreg+status,2+status,0+btemp+1]
   707                           
   708  0004                     interrupt_function:	
   709  004E                     saved_w	set	btemp
   710  0004  00CE               	movwf	btemp
   711  0005  0E03               	swapf	3,w
   712  0006  1283               	bcf	3,5	;RP0=0, select bank0
   713  0007  0099               	movwf	??_extInterrupt+3
   714  0008  0804               	movf	4,w
   715  0009  009A               	movwf	??_extInterrupt+4
   716  000A  080A               	movf	10,w
   717  000B  009B               	movwf	??_extInterrupt+5
   718  000C  084F               	movf	btemp+1,w
   719  000D  009C               	movwf	??_extInterrupt+6
   720  000E  281D               	ljmp	_extInterrupt


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66      7      17

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _extInterrupt in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _extInterrupt in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _init
                            _minMark
                          _resetTime
 ---------------------------------------------------------------------------------
 (1) _resetTime                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _minMark                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _extInterrupt                                         7     7      0       0
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _minMark
   _resetTime

 _extInterrupt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              40      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               42      7      11       3       25.8%
ABS                  0      0      11       4        0.0%
BITBANK0            42      0       0       5        0.0%
DATA                 0      0      11       6        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sun Apr 01 12:08:07 2018

             __CFG_CP$ON 0000                      l651 00D6                      l655 00DC  
                    l647 00D2                      l665 00EE                      _RB0 0030  
                    _min 0014                      fsr0 0004             __CFG_FOSC$XT 0000  
                   _T0IE 005D                     _T0IF 005A                     _INTE 005C  
                   _INTF 0059                     i1l70 0097                     i1l75 00AC  
                   _TMR0 0001                     _main 00EB                     _init 00B8  
                   _hour 0012                     btemp 004E                     start 000F  
                  ?_main 0016                    ?_init 0016            __CFG_WDTE$OFF 0000  
                  i1l693 0088                    i1l685 005E                    u20_25 003D  
                  u21_25 0049                    u22_25 0068                    u23_25 0074  
                  _PORTA 0005                    _PORTB 0006                    u27_27 002F  
                  u28_27 008F                    _TRISA 0085                    _TRISB 0086  
        __end_of_minMark 00E3                    _secNo 0010                    pclath 000A  
                  status 0003                    wtemp0 004E          __initialization 0010  
           __end_of_main 00F1             __end_of_init 00CF                   ??_main 0000  
                 ??_init 0000            ?_extInterrupt 0016                   _INTCON 000B  
                 _synced 000C                ??_minMark 0000                   saved_w 004E  
         ??_extInterrupt 0016  __end_of__initialization 001B           __pcstackCOMMON 0000  
             __pbssBANK0 000C               __pmaintext 00EB               __pintentry 0004  
     __size_of_resetTime 0008     __end_of_extInterrupt 00B8                  __ptext1 00E3  
                __ptext2 00CF                  __ptext3 00B8                  __ptext4 001D  
                _minMark 00CF     end_of_initialization 001B        __end_of_resetTime 00EB  
             _timerCount 000E      start_initialization 0010    __size_of_extInterrupt 009B  
              ___latbits 0000            __pcstackBANK0 0016             _extInterrupt 001D  
               ?_minMark 0016        interrupt_function 0004                _resetTime 00E3  
             ?_resetTime 0016         __size_of_minMark 0014            __size_of_main 0006  
          __size_of_init 0017                 intlevel1 0000              ??_resetTime 0000  
             _OPTION_REG 0081  
